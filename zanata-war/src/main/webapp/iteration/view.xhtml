<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:s="http://jboss.org/schema/seam/taglib"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:a4j="http://richfaces.org/a4j"
  xmlns:rich="http://richfaces.org/rich"
  xmlns:zanata="http://java.sun.com/jsf/composite/zanata"
  template="../WEB-INF/template/template.xhtml">

<ui:define name="page_title">
  #{messages['jsf.Version']} -
  #{versionHomeAction.projectSlug}:#{versionHomeAction.versionSlug}
</ui:define>

<ui:define name="center_content">
<script type="text/javascript">
  jQuery(document).ready(function () {
    checkHashUrl('#languages', '#settings-general');
    renderStatistics();
  });

  function updateHashAndGotoUrl(anchor) {
    window.location.hash = jQuery(anchor).attr('href');
    checkHashUrl('#languages_tab', '#settings-general_tab');
  }


  function openUploadSourceDocPanel() {
    #{rich:component('uploadSourceDocPanel')}
  .
    show();
    checkIfGeneralFileSelected()
  }

  function openUploadSourcePanel(docId) {
    #{rich:element('uploadSourcePanelHeader')}
  .
    innerHTML =
      '#{messages['jsf.iteration.files.UpdateDocument']}: ' + docId;
    #{rich:element('uploadSourceDocId')}
  .
    value = docId;
    #{rich:component('uploadSourcePanel')}
  .
    show();
    checkIfSpecificFileSelected();
  }

  function hideUploadSourcePanel() {
    #{rich:component('uploadSourcePanel')}
  .
    hide();
    return false;
  }

  function hideSourceDocUploadPanel() {
    #{rich:component('uploadSourceDocPanel')}
  .
    hide();
    return false;
  }

  function checkIfGeneralFileSelected() {
    var fileInput = #{rich:element('generalDocFileUpload')};
    var submitButton = #{rich:element('generalDocSubmitUploadButton')};
    var errorMessage = document.getElementById('invalidFilenameError');
    checkIfFileSelected(fileInput, submitButton);
    var fileName = fileInput.value;
    var hasSemicolon = fileName !== undefined &amp;&amp;
      fileName.lastIndexOf(';') !== -1;
    if (hasSemicolon) {
      errorMessage.style.display = '';
      submitButton.disabled = true;
    } else {
      errorMessage.style.display = 'none';
    }
  }

  function checkIfSpecificFileSelected() {
    checkIfFileSelected(#{rich:element('specificDocFileInput')},
      #{rich:element('specificDocSubmitUploadButton')});
  }

  function checkIfFileSelected(fileInput, submitButton) {
    var noFileSelected = fileInput.value === undefined ||
      fileInput.value === "";
    submitButton.disabled = noFileSelected;
  }
</script>

<h:form>
  <a4j:jsFunction name="refreshStatistics" status="statistic-loader"
    oncomplete="refreshTooltip('version-page')"
    render="overall_statistic, languages-language_form, languages-document_list, documents-document_form, documents-language_list, settings-document_form, languages-size, documents-size, language-label, document-label"
    action="#{versionHomeAction.resetPageData}"/>

  <a4j:jsFunction name="renderStatistics" status="statistic-loader"
    oncomplete="refreshTooltip('version-page')"
    render="overall_statistic, languages-language_form, documents-document_form, settings-document_form"
    action="#{versionHomeAction.setPageRendered(true)}"/>
</h:form>

<div class="g" id="version-page">
<div class="g__item w--1-m w--3-8-l w--1-3 l--push-bottom-half">
  <p class="txt--meta l--push-all-0">
    <s:link view="/project/home.xhtml" propagation="none"
      value="#{messages['jsf.Projects']}"/>
    <i class="i i--arrow-right"></i>
    <s:link
      value="#{versionHomeAction.version.project.name}" propagation="none"
      view="/project/project.xhtml">
      <f:param name="slug" value="#{versionHomeAction.projectSlug}"/>
    </s:link>
  </p>

  <s:div styleClass="l--push-bottom-half" id="version-info">
    <s:fragment rendered="#{versionHome.instance.status eq 'ACTIVE'}">
      <h1 class="l--push-all-0">
        <i class="i--small i--version txt--neutral i--left"></i>
        #{versionHomeAction.versionSlug}
      </h1>
    </s:fragment>
    <s:fragment rendered="#{versionHome.instance.status ne 'ACTIVE'}">
      <h1 class="l--push-all-0 txt--neutral">
        <i class="i--small i--version txt--neutral i--left"></i>
        #{versionHomeAction.versionSlug}
        <i class="i--small i--right i--lock"
          title="#{messages['jsf.iteration.tooltip.readonly']}"></i>
      </h1>
    </s:fragment>
  </s:div>

  <s:div styleClass="progress-bar--large__expander l--pad-bottom-half"
    id="overall_statistic">
    <s:fragment rendered="#{versionHomeAction.pageRendered}">
      <p class="d--top l--pad-top-half txt--mini">
        #{messages['jsf.TotalSourceContains']}
        <strong>#{versionHomeAction.overallStatistic.total} words</strong>
      </p>
      <ul class="g--tight g--fit">
        <s:fragment
          rendered="#{versionHome.instance.requireTranslationReview}">
          <li class="g__item l--push-bottom-half">
              <span class="stats txt--state-highlight">
                <span class="stats__figure">
                  #{statisticBar.formatPercentage(versionHomeAction.overallStatistic.percentApproved)}%
                </span>
                <span
                  class="stats__unit txt--lowercase"> #{messages['jsf.stats.Approved']}</span>
              </span>
          </li>
        </s:fragment>

        <li class="g__item l--push-bottom-half">
              <span
                class="txt--state-success #{versionHome.instance.requireTranslationReview ? 'stats' : 'stats--large'}">
                <span class="stats__figure">
                  #{statisticBar.formatPercentage(versionHomeAction.overallStatistic.percentTranslated)}%
                </span>
                <span
                  class="stats__unit txt--lowercase"> #{messages['jsf.stats.Translated']}</span>
              </span>
        </li>
        <li class="g__item l--push-bottom-half">
              <span
                class="#{versionHome.instance.requireTranslationReview ? 'stats' : 'stats--large'}">
                <span class="stats__figure">
                  #{statisticBar.formatHours(versionHomeAction.overallStatistic.remainingHours)}
                </span>
                <span class="stats__unit txt--lowercase">
                  #{messages['jsf.stats.TotalHoursRemaining']}
                </span>
              </span>
        </li>
      </ul>
      <zanata:statistic
        value="#{versionHomeAction.overallStatistic}"
        type="large"/>
    </s:fragment>

    <zanata:loader type="loader--large"
      rendered="#{!versionHomeAction.pageRendered}"/>
  </s:div>
</div>

<div class="g__item w--1-m w--5-8-l w--2-3">
  <div class="tabs--lined">
    <nav class="tabs__nav">
      <ul>
        <li>
          <a href="#languages" id="languages"
            class="is-active js-tab">
            <i class="i i--language"></i>
                  <span class="is-hidden--s i__text--right">
                    #{messages['jsf.Languages']}
                    <s:span styleClass="txt--neutral" id="languages-size">
                      #{versionHomeAction.getSupportedLocale().size}
                    </s:span>
                  </span>
          </a>
        </li>
        <li>
          <a href="#documents" id="documents" class="js-tab">
            <i class="i i--document"></i>
                  <span class="is-hidden--s i__text--right">
                    #{messages['jsf.Documents']}
                    <s:span styleClass="txt--neutral"
                      id="documents-size">
                      #{versionHomeAction.getDocuments().size}
                    </s:span>
                  </span>
          </a>
        </li>
        <s:fragment rendered="#{not empty versionHomeAction.groups}">
          <li>
            <a href="#groups" id="groups" class="js-tab">
              <i class="i i--group"></i>
                  <span class="is-hidden--s i__text--right">
                    #{messages['jsf.Groups']}
                    <s:span styleClass="txt--neutral" id="groups-size">
                      #{versionHomeAction.groups.size}
                    </s:span>
                  </span>
            </a>
          </li>
        </s:fragment>
        <s:fragment rendered="#{identity.loggedIn}">
          <li class="tab__end">
            <div
              class="dropdown dropdown--tab dropdown--small dropdown--right dropdown--inline js-dropdown">
              <a class="dropdown__toggle js-dropdown__toggle"
                title="#{messages['jsf.tooltip.MoreActions']}" href="#">
                <i class="i i--ellipsis"></i>
              </a>
              <ul class="dropdown__content js-dropdown__content"
                role="content" aria-labelledby="dropdownContent">
                <li>
                  <h:outputLink id="exportTMXIterLink"
                    onclick="return confirm('#{messages['jsf.ConfirmExportTMXIter']}')"
                    styleClass="i__item--right"
                    value="#{request.contextPath}/rest/tm/projects/#{versionHomeAction.projectSlug}/iterations/#{versionHomeAction.versionSlug}">
                    #{messages['jsf.iteration.ExportTMXIter']}<i
                    class="i i--export i__item__icon"></i>
                  </h:outputLink>
                </li>
                <li>
                  <s:link title="#{messages['jsf.GenerateProjectConfig']}"
                    styleClass="i__item--right"
                    action="#{configurationAction.downloadGeneralConfig()}">
                    <f:param name="projectSlug"
                      value="#{versionHomeAction.projectSlug}"/>
                    <f:param name="iterationSlug"
                      value="#{versionHomeAction.versionSlug}"/>
                    #{messages['jsf.ConfigFile']}
                    <i class="i i--export i__item__icon"></i>
                  </s:link>
                </li>
              </ul>
            </div>
          </li>
          <s:fragment
            rendered="#{s:hasPermission(versionHomeAction.version, 'update')}">
            <li class="tab__end">
              <a href="#settings" id="settings" class="js-tab"
                title="#{messages['jsf.iteration.tooltip.VersionSettings']}">
                    <span class="is-hidden--s i__text--left">
                      #{messages['jsf.Settings']}
                    </span>
                <i class="i i--settings"></i>
              </a>
            </li>
          </s:fragment>
        </s:fragment>
      </ul>
    </nav>

    <div class="tabs__content panels__container l--push-top-1">
      <div id="languages_content" class="is-hidden">
        <ui:include
          src="../WEB-INF/layout/version/languages-tab.xhtml"/>
      </div>

      <div id="documents_content" class="is-hidden">
        <ui:include
          src="../WEB-INF/layout/version/documents-tab.xhtml"/>
      </div>

      <s:div id="groups_content" styleClass="is-hidden"
        rendered="#{!versionHomeAction.groups.isEmpty()}">
        <ui:include
          src="../WEB-INF/layout/version/groups-tab.xhtml"/>
      </s:div>

      <s:fragment
        rendered="#{s:hasPermission(versionHomeAction.version, 'update')}">
        <div id="settings_content" class="is-hidden">
          <ui:include
            src="../WEB-INF/layout/version/settings-tab.xhtml"/>
        </div>
      </s:fragment>
    </div>

  </div>
</div>
</div>

<rich:popupPanel id="uploadSourcePanel"
  moveable="#{false}"
  resizeable="#{false}"
  autosized="#{true}">
  <f:facet name="header">
    <h:outputText id="uploadSourcePanelHeader"/>
  </f:facet>
  <h:form id="uploadSrcForm" enctype="multipart/form-data">
    <s:fileUpload id="specificDocFileInput"
      accept="*"
      onchange="checkIfSpecificFileSelected();"
      data="#{versionHomeAction.sourceFileUpload.fileContents}"
      fileName="#{versionHomeAction.sourceFileUpload.fileName}"/>
    <h:inputHidden id="uploadSourceDocId"
      value="#{versionHomeAction.sourceFileUpload.docId}"/>
    <br/>
    <h:selectOneMenu
      value="#{versionHomeAction.sourceFileUpload.sourceLang}">
      <s:selectItems
        value="#{versionHomeAction.availableSourceLocales}" var="locale"
        label="#{locale.retrieveNativeName()}"
        itemValue="#{locale.localeId.toString()}"
        escape="true"/>
      <h:outputLabel value="#{messages['jsf.SourceLanguage']}"/>
    </h:selectOneMenu>
    <br/>
    <rich:collapsiblePanel
      header="#{messages['jsf.iteration.files.CustomParams']}"
      switchType="client"
      expanded="false">
      <h:outputLabel for="adapterParams"
        value="#{messages['jsf.iteration.files.CustomParams.description']}"/>
      <br/>
      <h:inputTextarea id="adapterParams"
        value="#{versionHomeAction.sourceFileUpload.adapterParams}"/>
      <br/>
      <a target="_blank"
        href="https://github.com/zanata/zanata-server/wiki/Custom-document-parameters">
        #{messages['jsf.iteration.files.CustomParams.linkText']}
      </a>
    </rich:collapsiblePanel>

    <div style="text-align:right">
      <h:commandButton id="specificDocSubmitUploadButton"
        value="#{messages['jsf.Upload']}"
        action="#{versionHomeAction.uploadSourceFile}"/>
      <h:commandButton value="#{messages['jsf.Cancel']}"
        onclick="return hideUploadSourcePanel();"/>
    </div>
  </h:form>
</rich:popupPanel>


<rich:popupPanel id="uploadSourceDocPanel"
  moveable="#{false}"
  resizeable="#{false}"
  autosized="#{true}">
  <f:facet name="header">
    <h:outputText
      value="#{messages['jsf.iteration.files.UploadNewSourceDocument']}"/>
  </f:facet>
  <h:form id="uploadDocForm" enctype="multipart/form-data">
    <s:fileUpload id="generalDocFileUpload"
      accept="*"
      onchange="checkIfGeneralFileSelected();"
      data="#{versionHomeAction.sourceFileUpload.fileContents}"
      fileName="#{versionHomeAction.sourceFileUpload.fileName}"/>

    <div id="invalidFilenameError" style="display: none;
                                                      color: red;
                                                      padding: 5px;
                                                      margin-bottom: 5px;">
      #{messages['jsf.iteration.files.FilenameWithSemicolonNotSupported']}
    </div>
    <div>
      <h:outputLabel for="docPath"
        value="#{messages['jsf.iteration.files.DocumentPath']}"/>
      <h:inputText id="docPath"
        value="#{versionHomeAction.sourceFileUpload.documentPath}">
      </h:inputText>
    </div>
    <div>
      <h:selectOneMenu
        value="#{versionHomeAction.sourceFileUpload.sourceLang}">
        <s:selectItems
          value="#{versionHomeAction.availableSourceLocales}"
          var="locale"
          label="#{locale.retrieveNativeName()}"
          itemValue="#{locale.localeId.toString()}"
          escape="true"/>
        <h:outputLabel value="#{messages['jsf.SourceLanguage']}"/>
      </h:selectOneMenu>
    </div>
    <rich:collapsiblePanel
      header="#{messages['jsf.iteration.files.CustomParams']}"
      switchType="client"
      expanded="false">
      <h:outputLabel for="adapterParams"
        value="#{messages['jsf.iteration.files.CustomParams.description']}"/>
      <br/>
      <h:inputTextarea id="adapterParams"
        value="#{versionHomeAction.sourceFileUpload.adapterParams}"/>
      <br/>
      <a target="_blank"
        href="https://github.com/zanata/zanata-server/wiki/Custom-document-parameters">
        #{messages['jsf.iteration.files.CustomParams.linkText']}
      </a>
    </rich:collapsiblePanel>

    <div style="text-align:right">
      <h:commandButton id="generalDocSubmitUploadButton"
        value="#{messages['jsf.Upload']}"
        action="#{versionHomeAction.uploadSourceFile}"/>
      <h:commandButton id="generalDocCancelUploadButton"
        value="#{messages['jsf.Cancel']}"
        onclick="return hideSourceDocUploadPanel();"/>
    </div>
  </h:form>
</rich:popupPanel>
</ui:define>

</ui:composition>
