<?xml version="1.0" encoding="UTF-8"?>
<pages xmlns="http://jboss.org/schema/seam/pages"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://jboss.org/schema/seam/pages http://jboss.org/schema/seam/pages-2.3.xsd"
  no-conversation-view-id="/home.xhtml" login-view-id="/account/login.xhtml">
  


  <!-- TODO [CDI] uses conversation scope facesMessages. if migrated to faces-config, it will lose notification message -->
  <page view-id="/account/password_reset_request.xhtml">
    <navigation from-action="#{passwordResetRequest.requestReset}">
      <rule if-outcome="home">
        <end-conversation />
        <redirect view-id="/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <!-- TODO [CDI] uses conversation scope facesMessages. if migrated to faces-config, it will lose notification message -->
  <page view-id="/account/inactive_account.xhtml">
    <navigation from-action="#{inactiveAccountAction.sendActivationEmail}">
      <end-conversation />
      <redirect view-id="/home.xhtml" />
    </navigation>
    <navigation from-action="#{inactiveAccountAction.changeEmail}">
      <rule if-outcome="home">
        <end-conversation />
        <redirect view-id="/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <!-- Admin -->
  <!-- TODO [CDI] the backed bean is conversation scope (EntityHome) which can not be migrated to faces-config.xml -->
  <page view-id="/admin/rolerules.xhtml">
    <navigation from-action="#{roleAssignmentRuleAction.edit(rule)}">
      <redirect view-id="/admin/roleruledetails.xhtml" />
    </navigation>
  </page>
  <page view-id="/admin/roleruledetails.xhtml">
    <navigation from-action="#{roleAssignmentRuleAction.update}">
      <end-conversation />
      <redirect view-id="/admin/rolerules.xhtml" />
    </navigation>
    <navigation from-action="#{roleAssignmentRuleAction.persist}">
      <end-conversation />
      <redirect view-id="/admin/rolerules.xhtml" />
    </navigation>
  </page>
  

  <!-- Project -->

  <page view-id="/project/project.xhtml">
    <navigation from-action="#{projectHome.update}">
      <rule if-outcome="projectSlugUpdated">
        <redirect view-id="/project/project.xhtml">
          <param name="slug" value="#{projectHome.slug}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <page view-id="/project/create_project.xhtml">
    <navigation from-action="#{projectHome.persist}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.instance.slug}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/project/add_iteration.xhtml">

    <navigation from-action="#{versionHome.createVersion}">
      <rule if-outcome="invalid-slug">
        <redirect view-id="/project/add_iteration.xhtml">
          <param name="projectSlug" value="#{versionHome.projectSlug}" />
        </redirect>
      </rule>
      <rule if-outcome="copy-version">
        <redirect view-id="/project/project.xhtml">
          <param name="slug" value="#{versionHome.projectSlug}" />
        </redirect>
      </rule>
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug" value="#{versionHome.projectSlug}" />
        <param name="iterationSlug" value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
  </page>

  <!-- Project Iteration -->
  <page view-id="/iteration/view.xhtml">

    <navigation from-action="#{versionHomeAction.uploadSourceFile}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionHome.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
    <navigation
      from-action="#{versionHomeAction.uploadTranslationFile(versionHomeAction.selectedLocale)}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionHome.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
    <navigation from-action="#{mergeTransAction.startMergeTranslations}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionHome.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
    <navigation from-action="#{versionHome.update}">
      <rule if-outcome="versionSlugUpdated">
        <redirect view-id="/iteration/view.xhtml">
          <param name="projectSlug"
            value="#{versionHome.projectSlug}" />
          <param name="iterationSlug"
            value="#{versionHome.instance.slug}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <!-- Language -->
  <page view-id="/language/home.xhtml">
    <navigation from-action="#{languageManagerAction.save}">
      <redirect view-id="/language/home.xhtml"/>
    </navigation>
  </page>

  <!-- Translation Memory -->
  <page view-id="/tm/create.xhtml">
    <navigation from-action="#{translationMemoryHome.persist}">
      <rule if-outcome="persisted">
        <redirect view-id="/tm/home.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{translationMemoryHome.update}">
      <rule if-outcome="updated">
        <redirect view-id="/tm/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <!-- we need to explicitly secure webtrans after removing seam remoting -->
  <page view-id="/webtrans/Application.xhtml" conversation-required="false">
    <navigation evaluate="#{identity.isLoggedIn()}">
      <rule if-outcome="false">
        <redirect view-id="/account/sign_in">
          <param name="continue" value="#{userRedirect.encodedUrl}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <!-- TODO [CDI] we will probably use something like this http://stackoverflow.com/a/18411362/345718 -->
  <!-- Exceptions -->
  <exception class="org.zanata.exception.KeyNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{msgs['jsf.InvalidActivationKey']}
      </message>
    </redirect>
  </exception>

  <exception class="org.zanata.exception.ActivationLinkExpiredException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{msgs['jsf.ActivationLinkExpired']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.framework.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{msgs['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{msgs['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityExistsException">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{msgs['jsf.DuplicatedRecord']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.OptimisticLockException">
    <end-conversation />
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{msgs['jsf.AnotherUserChangedTheSameDataPleaseTryAgain']}
      </message>
    </redirect>
  </exception>

  <exception class="org.zanata.exception.AuthorizationException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="error">#{msgs['jsf.YouDoNotHavePermissionToAccessThisResource']}
      </message>
    </redirect>
  </exception>

  <exception class="org.zanata.exception.NotLoggedInException"
    log-level="debug">
    <redirect view-id="/account/login.xhtml">
      <message severity="warn">#{msgs['org.jboss.seam.NotLoggedIn']}
      </message>
    </redirect>
  </exception>

  <exception class="javax.security.auth.login.LoginException"
    log-level="debug">
    <redirect view-id="/account/login.xhtml">
      <message severity="warn">#{msgs['org.jboss.seam.NotLoggedIn']}
      </message>
    </redirect>
  </exception>

  <exception class="javax.faces.application.ViewExpiredException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{msgs['jsf.YourSessionHasTimedOutPleaseTryAgain']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.ConcurrentRequestTimeoutException"
    log-level="trace">
    <http-error error-code="503" />
  </exception>

  <exception class="javax.validation.ConstraintViolationException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{msgs['jsf.Error']} #{org.jboss.seam.handledException.message}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.web.FileUploadException" log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">
        #{msgs['jsf.iteration.files.UploadFailed']} #{org.jboss.seam.handledException.message}
      </message>
    </redirect>
  </exception>

  <exception>
    <redirect view-id="/error.xhtml">
      <message severity="error">#{msgs['jsf.UnexpectedError']}</message>
    </redirect>
  </exception>

</pages>
