<?xml version="1.0" encoding="UTF-8"?>
<pages xmlns="http://jboss.org/schema/seam/pages"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://jboss.org/schema/seam/pages http://jboss.org/schema/seam/pages-2.3.xsd"
  no-conversation-view-id="/home.xhtml" login-view-id="/account/login.xhtml">

  <page view-id="*">
    <navigation>
      <rule if-outcome="home">
        <redirect view-id="/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <!-- Project Search -->
  <page view-id="/search.xhtml">
    <param name="query" value="#{projectSearch.projectAutocomplete.query}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.SearchProjects'])}" />
  </page>


  <page view-id="/dashboard/*" login-required="true">
    <restrict>#{identity.loggedIn}</restrict>
  </page>

  <page view-id="/edit_home_content.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.server.EditHomePage.label'])}" />
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>

  <page view-id="/edit_home_content_code.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.server.EditHomePageCode.label'])}" />
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>

  <!-- Landing page for open id authentication -->
  <page view-id="/openid.xhtml">
    <navigation>
      <rule
        if="#{authenticationManager.authenticated and authenticationManager.newUser}">
        <redirect view-id="/profile/create_user.xhtml" />
      </rule>
      <rule
        if="#{!identity.isLoggedIn() and authenticationManager.authenticatedAccountWaitingForActivation}">
        <redirect view-id="/account/inactive_account.xhtml" />
      </rule>
      <rule if="#{!identity.loggedIn}">
        <redirect view-id="/account/login.xhtml" />
      </rule>
      <rule
        if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.shouldRedirectToDashboard()}}">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
      <rule
        if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirect}">
        <redirect url="#{userRedirect.url}" />
      </rule>
    </navigation>
  </page>


  <!-- Landing page for Kerberos ticket-based Authentication -->
  <page view-id="/account/klogin.xhtml">
    <header name="Cache-Control"
      value="no-cache, no-store, max-age=0, must-revalidate" />
    <param name="continue" value="#{userRedirect.encodedUrl}" />
    <action execute="#{authenticationManager.kerberosLogin}" />
    <navigation evaluate="#{authenticationManager.authenticationRedirect}">
      <rule if-outcome="login">
        <redirect view-id="/account/login.xhtml" />
      </rule>
      <rule if-outcome="edit">
        <redirect view-id="/profile/create_user.xhtml" />
      </rule>
      <rule if-outcome="inactive">
        <redirect view-id="/account/inactive_account.xhtml" />
      </rule>
      <rule if-outcome="dashboard">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
      <rule if-outcome="home">
        <redirect view-id="/home.xhtml" />
      </rule>
      <rule if-outcome="redirect">
        <!-- TODO add login success message -->
        <redirect url="#{userRedirect.url}" />
      </rule>
    </navigation>
  </page>

  <!-- Landing page for Internal, JAAS and Kerberos form-based
       authentication -->
  <page view-id="/account/login.xhtml">
    <header name="Cache-Control"
      value="no-cache, no-store, max-age=0, must-revalidate" />
    <param name="continue" value="#{userRedirect.encodedUrl}" />

    <action execute="#{identity.isLoggedIn()}" />
    <navigation from-action="#{identity.isLoggedIn()}">
      <rule if-outcome="true">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{loginAction.login}">
      <rule
        if="#{authenticationManager.authenticated and authenticationManager.newUser}">
        <redirect view-id="/profile/create_user.xhtml" />
      </rule>
      <rule if-outcome="inactive">
        <begin-conversation />
        <redirect view-id="/account/inactive_account.xhtml" />
      </rule>
      <rule
        if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.shouldRedirectToDashboard()}">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
      <rule
        if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirect}">
        <redirect url="#{userRedirect.url}" />
      </rule>
    </navigation>
  </page>

  <page view-id="/account/logout.xhtml">
    <action execute="#{identity.logout}" if="#{identity.loggedIn}" />
    <navigation>
      <redirect view-id="/home.xhtml" />
    </navigation>
  </page>

  <page view-id="/account/activate.xhtml">
    <param name="key" value="#{activate.activationKey}" />
    <action execute="#{activate.validateActivationKey}" />
    <action execute="#{activate.activate}" />
  </page>

  <page view-id="/account/email_validation.xhtml" login-required="true">
    <param name="key" value="#{validateEmail.activationKey}" />
    <action execute="#{validateEmail.validate}" />
  </page>

  <page view-id="/account/password_reset.xhtml">
    <restrict>#{applicationConfiguration.internalAuth}</restrict>
    <param name="key" value="#{passwordReset.activationKey}" />
    <action execute="#{passwordReset.validateActivationKey}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ResetPassword'])}" />
  </page>

  <page view-id="/account/changepassword.xhtml" login-required="true">
    <restrict>#{applicationConfiguration.internalAuth}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ChangePassword'])}" />
  </page>

  <page view-id="/account/register.xhtml">
    <action execute="#{identity.isLoggedIn()}" />
    <navigation from-action="#{identity.isLoggedIn()}">
      <rule if-outcome="true">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/account/inactive_account.xhtml">
    <restrict>#{authenticationManager.isAuthenticatedAccountWaitingForActivation()}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.InactiveAccount'])}" />
    <action execute="#{inactiveAccountAction.init}" />
    <navigation from-action="#{inactiveAccountAction.sendActivationEmail}">
      <end-conversation />
      <redirect view-id="/home.xhtml" />
    </navigation>
    <navigation from-action="#{inactiveAccountAction.changeEmail}">
      <rule if-outcome="home">
        <end-conversation />
        <redirect view-id="/home.xhtml" />
      </rule>
    </navigation>
  </page>


  <!-- Glossary -->
  <page view-id="/glossary/view.xhtml">
    <restrict>#{identity.loggedIn}</restrict>

    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.Glossary'])}" />

    <action execute="#{glossaryAction.initialize()}" />
  </page>

  <!-- Admin -->

  <page view-id="/admin/*" login-required="true">
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>

  <page view-id="/admin/home.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.Administration'])}" />
  </page>

  <page view-id="/admin/search.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ManageSearch'])}" />
  </page>

  <page view-id="/admin/stats.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.OverallStatistics'])}" />
  </page>

  <page view-id="/admin/roledetail.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/rolemanager.xhtml', messages['jsf.ManageRoles'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.RoleDetails'])}" />

    <navigation from-action="#{roleAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/rolemanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/supportedlanguagedetail.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/languagemanager.xhtml', messages['jsf.ManageLanguage'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.CreateSupportedLanguage'])}" />
    <navigation from-action="#{languageManagerAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/languagemanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/rolemanager.xhtml" action="#{roleSearch.loadRoles}">
    <restrict>#{s:hasPermission('seam.role', 'read')}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ManageRoles'])}" />
    <navigation from-action="#{roleAction.createRole}">
      <redirect view-id="/admin/roledetail.xhtml" />
    </navigation>
    <navigation from-action="#{roleAction.editRole(roleSearch.selectedRole)}">
      <redirect view-id="/admin/roledetail.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/userdetail.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/usermanager.xhtml', messages['jsf.ManageUsers'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.AccountDetails'])}" />

    <navigation from-action="#{userAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/usermanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/usermanager.xhtml" action="#{userSearch.loadUsers}">
    <restrict>#{s:hasPermission('seam.user', 'read')}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ManageUsers'])}" />
    <navigation from-action="#{userAction.createUser}">
      <redirect view-id="/admin/userdetail.xhtml" />
    </navigation>
    <navigation from-action="#{userAction.editUser(userSearch.selectedUser)}">
      <redirect view-id="/admin/userdetail.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/server_configuration.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ServerConfiguration'])}" />
    <navigation from-action="#{serverConfigurationBean.update}">
      <redirect view-id="/admin/home.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/languagemanager.xhtml">
    <action execute="#{languageSearchAction.loadSupportedLanguage}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ManageLanguage'])}" />

    <navigation
      from-action="#{languageSearchAction.manageMembers(language.localeId.id)}">
      <redirect view-id="/language/language.xhtml">
        <param name="id" value="#{language.localeId.id}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/admin/rolerules.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.RoleAssignmentRules'])}" />

    <navigation from-action="#{roleAssignmentRuleAction.edit(rule)}">
      <redirect view-id="/admin/roleruledetails.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/roleruledetails.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/rolerules.xhtml', messages['jsf.RoleAssignmentRules'])}" />
    <action if="#{!roleAssignmentRuleAction.managed}"
      execute="#{breadcrumbs.addLocation('', messages['jsf.rolerules.CreateRoleAssignmentRule'])}" />
    <action if="#{roleAssignmentRuleAction.managed}"
      execute="#{breadcrumbs.addLocation('', messages['jsf.rolerules.EditRoleAssignmentRule'])}" />

    <navigation from-action="#{roleAssignmentRuleAction.update}">
      <rule if-outcome="persisted">
        <end-conversation />
        <redirect view-id="/admin/rolerules.xhtml" />
      </rule>
      <rule if-outcome="updated">
        <end-conversation />
        <redirect view-id="/admin/rolerules.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/processmanager.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/admin/processmanager.xhtml', messages['jsf.ProcessManager'])}" />

    <navigation from-action="#{processManagerAction.clearAllFinished}">
      <redirect view-id="/admin/processmanager.xhtml" />
    </navigation>
  </page>

  <!-- Version Group -->

  <page view-id="/version-group/home.xhtml">
    <action execute="#{versionGroupAction.loadAllActiveGroupsOrIsMaintainer}" />
    <action execute="#{breadcrumbs.clear}" />
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.Groups'])}" />
  </page>

  <page view-id="/version-group/create_version_group.xhtml">
    <restrict>#{s:hasPermission(versionGroupHome.instance, 'insert')}</restrict>
    <navigation from-action="#{versionGroupHome.persist}">
      <rule if="#{versionGroupHome.managed}">
        <redirect view-id="/version-group/home.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/version-group/version_group.xhtml">
    <param name="versionGroupSlug" value="#{versionGroupHomeAction.slug}" />
    <param name="versionGroupSlug" value="#{versionGroupHome.slug}" />
    <action execute="#{versionGroupHome.validateSuppliedId}" />
  </page>

  <page view-id="/version-group/request_to_join.xhtml">
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
    <action
      execute="#{versionGroupJoinAction.searchMaintainedProjectVersion()}" />

    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupJoinAction.slug).param('versionGroupSlug', versionGroupJoinAction.slug)}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.RequestJoinGroup'])}" />

    <navigation from-action="#{versionGroupJoinAction.send}">
      <rule if-outcome="success">
        <redirect view-id="/version-group/version_group.xhtml">
          <param name="versionGroupSlug"
            value="#{versionGroupJoinAction.slug}" />
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/version-group/request_to_join.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{versionGroupJoinAction.cancel}">
      <redirect view-id="/version-group/version_group.xhtml">
        <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
      </redirect>
    </navigation>
  </page>

  <!-- Profile -->
  <page view-id="/profile/edit.xhtml">
    <restrict>#{identity.preAuthenticated}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.EditProfile'])}" />
    <navigation from-action="#{profileAction.edit}">
      <redirect view-id="/profile/view.xhtml" />
    </navigation>
    <navigation from-action="#{profileAction.cancel}">
      <redirect view-id="/profile/view.xhtml" />
    </navigation>
  </page>

  <page view-id="/profile/create_user.xhtml">
    <restrict>#{identity.preAuthenticated}</restrict>
    <navigation from-action="#{newProfileAction.createUser}">
      <redirect view-id="/home.xhtml" />
    </navigation>
    <navigation from-action="#{newProfileAction.cancel}">
      <redirect view-id="/home.xhtml" />
    </navigation>
  </page>

  <page view-id="/profile/view.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.MyProfile'])}" />
  </page>

  <page view-id="/profile/identities.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.identities.Title'])}" />
    <action execute="#{credentialsAction.loadUserCredentials}" />
  </page>

  <page view-id="/profile/add_identity.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/identities.xhtml', messages['jsf.identities.Title'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.identities.AddIdentity'])}" />

    <navigation from-action="#{credentialsAction.cancel}">
      <redirect view-id="/profile/identities.xhtml" />
    </navigation>
  </page>

  <page view-id="/profile/merge_account.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.profile.MergeAccount'])}" />
    <action execute="#{accountMergeAction.validateAccounts}" />

    <navigation from-action="#{accountMergeAction.cancel}">
      <redirect view-id="/profile/view.xhtml" />
    </navigation>
  </page>

  <!-- Help -->
  <page view-id="/help/view.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.Help'])}" />
  </page>

  <page view-id="/help/edit_help_content.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/help/view.xhtml', messages['jsf.Help'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.EditHelpPageContent'])}" />
  </page>

  <page view-id="/help/contact_admin.xhtml">
    <restrict>#{identity.loggedIn}</restrict>
    <!-- ideally a literal value should be used for emailType,
         couldn't figure out a way to do this with seam/jsf.
         May want to subclass SendEmailAction and set the email template
         upon construction to achieve this. -->
    <param name="emailType" value="#{sendEmail.emailType}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/help/view.xhtml', messages['jsf.Help'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.ContactAdmin'])}" />
    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/help/view.xhtml" />
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/help/contact_admin.xhtml" />
      </rule>
    </navigation>
  </page>


  <!-- Project -->
  <page view-id="/project/home.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.Projects'])}" />
  </page>

  <page view-id="/project/project.xhtml">
    <param name="slug" value="#{projectHome.slug}" />
    <param name="slug" value="#{projectHomeAction.slug}" />
    <action execute="#{projectHome.initialize}" />
    <navigation from-action="#{projectHome.removeMaintainer}">
      <rule if-outcome="redirect">
        <redirect view-id="/project/project.xhtml">
          <param name="slug"
            value="#{projectHome.slug}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <page view-id="/project/create_project.xhtml">
    <restrict>#{s:hasPermission(projectHome.instance, 'insert')}</restrict>
    <navigation from-action="#{projectHome.persist}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.instance.slug}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/project/add_iteration.xhtml">
    <restrict>#{s:hasPermission(projectHome.instance, 'insert')}</restrict>
    <param name="projectSlug" value="#{versionHome.projectSlug}" />
    <action execute="#{versionHome.validateProjectSlug}" />
    <action execute="#{versionHome.createNew}" />

    <navigation from-action="#{versionHome.persist}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionHome.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
  </page>

  <!-- Project Iteration -->
  <page view-id="/iteration/view.xhtml">
    <param name="projectSlug" value="#{versionHomeAction.projectSlug}" />
    <param name="iterationSlug" value="#{versionHomeAction.versionSlug}" />

    <param name="projectSlug" value="#{versionHome.projectSlug}" />
    <param name="iterationSlug" value="#{versionHome.slug}" />

    <param name="projectSlug" value="#{copyTransAction.projectSlug}" />
    <param name="iterationSlug" value="#{copyTransAction.iterationSlug}" />

    <action execute="#{versionHome.validateSuppliedId}" />
    <action execute="#{copyTransAction.initialize}" />

    <navigation from-action="#{versionHomeAction.uploadSourceFile}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionHome.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionHome.instance.slug}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/iteration/request_to_join_group.xhtml">
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
    <param name="iterationSlug"
      value="#{versionGroupJoinAction.iterationSlug}" />
    <param name="projectSlug" value="#{versionGroupJoinAction.projectSlug}" />

    <action execute="#{versionGroupJoinAction.searchProjectVersion()}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/project/project.xhtml', versionGroupJoinAction.projectSlug).param('slug', versionGroupJoinAction.projectSlug)}" />
    <action
      execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', versionGroupJoinAction.iterationSlug).param('projectSlug', versionGroupJoinAction.projectSlug).param('iterationSlug', versionGroupJoinAction.iterationSlug)}" />
    <action
      execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupJoinAction.slug).param('versionGroupSlug', versionGroupJoinAction.slug)}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.RequestJoinGroup'])}" />


    <navigation from-action="#{versionGroupJoinAction.send}">
      <rule if-outcome="success">
        <redirect view-id="/iteration/view.xhtml">
          <param name="projectSlug"
            value="#{versionGroupJoinAction.projectSlug}" />
          <param name="iterationSlug"
            value="#{versionGroupJoinAction.iterationSlug}" />
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/iteration/request_to_join_group.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{versionGroupJoinAction.cancel}">
      <redirect view-id="/iteration/view.xhtml">
        <param name="projectSlug"
          value="#{versionGroupJoinAction.projectSlug}" />
        <param name="iterationSlug"
          value="#{versionGroupJoinAction.iterationSlug}" />
      </redirect>
    </navigation>
  </page>


  <!-- Language -->
  <page view-id="/language/home.xhtml">
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.Languages'])}" />
  </page>

  <page view-id="/language/language.xhtml">
    <param name="id" value="#{languageTeamAction.language}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', languageTeamAction.language)}" />

  </page>

  <page view-id="/language/contact_coordinator.xhtml">
    <restrict>#{identity.loggedIn}</restrict>
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="id" value="#{sendEmail.language}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/language/language.xhtml', sendEmail.locale.localeId.id).param('id', sendEmail.locale.localeId.id)}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.contactLanguageTeamCoordinatorForLocale'])}" />

    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/language/contact_coordinator.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{sendEmail.cancel}">
      <redirect view-id="/language/language.xhtml">
        <param name="id" value="#{sendEmail.language}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/language/request_to_join_update_role.xhtml">
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="emailType" value="#{languageJoinUpdateRoleAction.emailType}" />
    <param name="id" value="#{languageJoinUpdateRoleAction.language}" />
    <param name="id" value="#{sendEmail.language}" />
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}" />
    <action
      execute="#{breadcrumbs.addLocation('/language/language.xhtml', sendEmail.locale.localeId.id).param('id', sendEmail.locale.localeId.id)}" />
    <action
      execute="#{breadcrumbs.addLocation('', languageJoinUpdateRoleAction.title)}" />

    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/language/request_to_join_update_role.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{sendEmail.cancel}">
      <redirect view-id="/language/language.xhtml">
        <param name="id" value="#{sendEmail.language}" />
      </redirect>
    </navigation>
  </page>

  <!-- Translation Memory -->
  <page view-id="/tm/home.xhtml">
    <restrict>#{s:hasRole('admin')}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/tm/home.xhtml', messages['jsf.transmemory.Title'])}" />
  </page>

  <page view-id="/tm/create.xhtml">
    <restrict>#{s:hasRole('admin')}</restrict>
    <action execute="#{breadcrumbs.clear}" />
    <action
      execute="#{breadcrumbs.addLocation('/tm/home.xhtml', messages['jsf.transmemory.Title'])}" />
    <action
      execute="#{breadcrumbs.addLocation('', messages['jsf.transmemory.title.New'])}" />
    <navigation from-action="#{translationMemoryAction.persist}">
      <rule if="#{translationMemoryAction.managed}">
        <redirect view-id="/tm/home.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{translationMemoryAction.cancel}">
      <redirect view-id="/tm/home.xhtml" />
    </navigation>
  </page>

  <!-- Exceptions -->
  <exception class="org.zanata.exception.KeyNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.InvalidActivationKey']}
      </message>
    </redirect>
  </exception>

  <exception class="org.zanata.exception.ActivationLinkExpiredException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.ActivationLinkExpired']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.framework.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityExistsException">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.DuplicatedRecord']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.OptimisticLockException">
    <end-conversation />
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{messages['jsf.AnotherUserChangedTheSameDataPleaseTryAgain']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.security.AuthorizationException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="error">#{messages['jsf.YouDoNotHavePermissionToAccessThisResource']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.security.NotLoggedInException"
    log-level="debug">
    <redirect view-id="/account/login.xhtml">
      <message severity="warn">#{messages['org.jboss.seam.NotLoggedIn']}
      </message>
    </redirect>
  </exception>

  <exception class="javax.security.auth.login.LoginException"
    log-level="debug">
    <redirect view-id="/account/login.xhtml">
      <message severity="warn">#{messages['org.jboss.seam.NotLoggedIn']}
      </message>
    </redirect>
  </exception>

  <exception class="javax.faces.application.ViewExpiredException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{messages['jsf.YourSessionHasTimedOutPleaseTryAgain']}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.ConcurrentRequestTimeoutException"
    log-level="trace">
    <http-error error-code="503" />
  </exception>

  <exception class="javax.validation.ConstraintViolationException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message
        severity="warn">#{messages['jsf.Error']} #{org.jboss.seam.handledException.message}
      </message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.web.FileUploadException" log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">
        #{messages['jsf.iteration.files.UploadFailed']} #{org.jboss.seam.handledException.message}
      </message>
    </redirect>
  </exception>

  <exception>
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.UnexpectedError']}</message>
    </redirect>
  </exception>

</pages>
