<?xml version="1.0" encoding="UTF-8"?>
<pages xmlns="http://jboss.org/schema/seam/pages"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://jboss.org/schema/seam/pages http://jboss.org/schema/seam/pages-2.3.xsd"
       no-conversation-view-id="/home.xhtml" login-view-id="/account/login.xhtml">

  <page view-id="*">
    <navigation>
      <rule if-outcome="home">
        <redirect view-id="/home.xhtml" />
      </rule>
    </navigation>
  </page>
  
  <page view-id="/edit_home_content.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.server.EditHomePage.label'])}"/>
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>
  
  <page view-id="/edit_home_content_code.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.server.EditHomePageCode.label'])}"/>
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>
  
  <!-- Project Search -->
  <!-- TODO this rule is a duplicate, should be combined with first * rule -->
  <page view-id="/search.xhtml">
  	<action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.SearchProjects'])}"/>
  </page>
  
  <page view-id="*">
  	<navigation from-action="#{projectSearch.search}">
  		<redirect view-id="/search.xhtml"/>
  	</navigation>
  </page>
  
  <!-- Landing page for open id authentication -->
  <page view-id="/openid.xhtml">
	 <navigation>
	      <rule if="#{authenticationManager.authenticated and authenticationManager.newUser}">
	        <redirect view-id="/profile/edit.xhtml" />
	      </rule>
	      <rule if="#{!identity.isLoggedIn() and authenticationManager.authenticatedAccountWaitingForActivation}">
	        <redirect view-id="/account/inactive_account.xhtml"/>
	      </rule>
	      <rule if="#{!identity.loggedIn}">
	        <redirect view-id="/account/login_input.xhtml" />
	      </rule>
	      <rule if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirectToHome}">
	        <redirect view-id="/dashboard/home.xhtml" />
	      </rule>
	      <rule if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirect}">
	        <redirect url="#{userRedirect.url}" />
	      </rule>
     </navigation>
  </page>
  

  <!-- Landing page for Kerberos Authentication -->
  <page view-id="/account/klogin.xhtml">
    <header name="Cache-Control" value="no-cache, no-store, max-age=0, must-revalidate" />
    <param name="continue" value="#{userRedirect.encodedUrl}" />
    <action execute="#{authenticationManager.kerberosLogin}"/>
    <navigation evaluate="#{authenticationManager.authenticationRedirect}">
      <rule if-outcome="login">
        <redirect view-id="/account/login_input.xhtml" />
      </rule>
      <rule if-outcome="edit">
        <redirect view-id="/profile/edit.xhtml" />
      </rule>
      <rule if-outcome="inactive">
        <redirect view-id="/account/inactive_account.xhtml"/>
      </rule>
      <rule if-outcome="dashboard">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
      <rule if-outcome="home">
        <redirect view-id="/home.xhtml" />
      </rule>
      <rule if-outcome="redirect">
        <!-- TODO add login success message -->
        <redirect url="#{userRedirect.url}" />
      </rule>
    </navigation>
  </page>

   <!-- Landing page for Internal and JAAS authentication -->
   <page view-id="/account/login_input.xhtml">
    <header name="Cache-Control" value="no-cache, no-store, max-age=0, must-revalidate" />
    <param name="continue" value="#{userRedirect.encodedUrl}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.Login'])}"/>
    <navigation from-action="#{loginAction.login}">
      <rule if="#{authenticationManager.authenticated and authenticationManager.newUser}">
        <redirect view-id="/profile/edit.xhtml" />
      </rule>
      <rule if-outcome="inactive">
        <begin-conversation/>
        <redirect view-id="/account/inactive_account.xhtml"/>
      </rule>
      <rule if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirectToHome}">
        <redirect view-id="/dashboard/home.xhtml" />
      </rule>
      <rule if="#{authenticationManager.authenticated and !authenticationManager.newUser and userRedirect.redirect}">
        <redirect url="#{userRedirect.url}" />
      </rule>
    </navigation>
  </page>

  <page view-id="/account/logout.xhtml">
    <action execute="#{identity.logout}" if="#{identity.loggedIn}" />
    <navigation>
      <redirect view-id="/home.xhtml" />
    </navigation>
  </page>

  <page view-id="/account/activate.xhtml">
    <param name="key" value="#{activate.activationKey}" />
    <action execute="#{activate.validateActivationKey}" />
    <action execute="#{activate.activate}" />
  </page>

  <page view-id="/account/email_validation.xhtml" login-required="true">
    <param name="key" value="#{validateEmail.activationKey}" />
   	<action execute="#{validateEmail.validate}" />
  </page>

  <page view-id="/account/password_reset.xhtml">
    <restrict>#{applicationConfiguration.internalAuth}</restrict>
    <param name="key" value="#{passwordReset.activationKey}" />
    <action execute="#{passwordReset.validateActivationKey}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ResetPassword'])}"/>
  </page>

  <page view-id="/account/changepassword.xhtml" login-required="true">
    <restrict>#{applicationConfiguration.internalAuth}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ChangePassword'])}"/>
  </page>
  
  <page view-id="/account/register.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Register'])}"/>
  </page>
  
  <page view-id="/account/inactive_account.xhtml">
  	<restrict>#{authenticationManager.isAuthenticatedAccountWaitingForActivation()}</restrict>
  	<action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.InactiveAccount'])}"/>
    <action execute="#{inactiveAccountAction.init}"/>
  	<navigation from-action="#{inactiveAccountAction.sendActivationEmail}">
	 	<end-conversation/>
	  	<redirect view-id="/home.xhtml" />
  	</navigation>
  	<navigation from-action="#{inactiveAccountAction.changeEmail}">
  		<rule if-outcome="home">
  		  	<end-conversation/>
	      	<redirect view-id="/home.xhtml" />
      	</rule>
  	</navigation>
  </page>
  
  
  <!-- Glossary -->
  <page view-id="/glossary/view.xhtml">
  	<restrict>#{identity.loggedIn}</restrict>
  	
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Glossary'])}"/>
  	
  	<action execute="#{glossaryAction.initialize()}" />
  </page>

  <!-- Admin -->

  <page view-id="/admin/*" login-required="true">
    <restrict>#{s:hasRole('admin')}</restrict>
  </page>
  
  <page view-id="/admin/home.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Administration'])}"/>
  </page>
  
  <page view-id="/admin/search.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageSearch'])}"/>
  </page>
  
  <page view-id="/admin/stats.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.OverallStatistics'])}"/>
  </page>
  
  <page view-id="/admin/roledetail.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/rolemanager.xhtml', messages['jsf.ManageRoles'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.RoleDetails'])}"/>
    
    <navigation from-action="#{roleAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/rolemanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/supportedlanguagedetail.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/languagemanager.xhtml', messages['jsf.ManageLanguage'])}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.CreateSupportedLanguage'])}"/>
    <navigation from-action="#{languageManagerAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/languagemanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/rolemanager.xhtml" action="#{roleSearch.loadRoles}">
    <restrict>#{s:hasPermission('seam.role', 'read')}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageRoles'])}"/>
    <navigation from-action="#{roleAction.createRole}">
      <redirect view-id="/admin/roledetail.xhtml" />
    </navigation>
    <navigation from-action="#{roleAction.editRole(roleSearch.selectedRole)}">
      <redirect view-id="/admin/roledetail.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/userdetail.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
  	<action execute="#{breadcrumbs.addLocation('/admin/usermanager.xhtml', messages['jsf.ManageUsers'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.AccountDetails'])}"/>
    
    <navigation from-action="#{userAction.save}">
      <rule if-outcome="success">
        <redirect view-id="/admin/usermanager.xhtml" />
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/usermanager.xhtml" action="#{userSearch.loadUsers}">
    <restrict>#{s:hasPermission('seam.user', 'read')}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageUsers'])}"/>
    <navigation from-action="#{userAction.createUser}">
      <redirect view-id="/admin/userdetail.xhtml" />
    </navigation>
    <navigation from-action="#{userAction.editUser(userSearch.selectedUser)}">
      <redirect view-id="/admin/userdetail.xhtml" />
    </navigation>
  </page>

  <page view-id="/admin/server_configuration.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ServerConfiguration'])}"/>
    <navigation from-action="#{serverConfigurationBean.update}">
      <redirect view-id="/admin/home.xhtml" />
    </navigation>
  </page>
  
  <page view-id="/admin/languagemanager.xhtml" >
    <action execute="#{languageSearchAction.loadSupportedLanguage}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageLanguage'])}"/>

      <navigation from-action="#{languageSearchAction.manageMembers(language.localeId.id)}">
          <redirect view-id="/language/language.xhtml">
              <param name="id" value="#{language.localeId.id}" />
          </redirect>
      </navigation>
  </page>

  <page view-id="/admin/rolerules.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.RoleAssignmentRules'])}"/>

    <navigation from-action="#{roleAssignmentRuleAction.edit(rule)}">
      <redirect view-id="/admin/roleruledetails.xhtml"/>
    </navigation>
  </page>

  <page view-id="/admin/roleruledetails.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/rolerules.xhtml', messages['jsf.RoleAssignmentRules'])}"/>
    <action if="#{!roleAssignmentRuleAction.managed}" execute="#{breadcrumbs.addLocation('', messages['jsf.rolerules.CreateRoleAssignmentRule'])}"/>
    <action if="#{roleAssignmentRuleAction.managed}" execute="#{breadcrumbs.addLocation('', messages['jsf.rolerules.EditRoleAssignmentRule'])}"/>

    <navigation from-action="#{roleAssignmentRuleAction.update}">
      <rule if-outcome="persisted">
        <end-conversation/>
        <redirect view-id="/admin/rolerules.xhtml"/>
      </rule>
      <rule if-outcome="updated">
        <end-conversation/>
        <redirect view-id="/admin/rolerules.xhtml"/>
      </rule>
    </navigation>
  </page>

  <page view-id="/admin/processmanager.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/home.xhtml', messages['jsf.Administration'])}"/>
    <action execute="#{breadcrumbs.addLocation('/admin/processmanager.xhtml', messages['jsf.ProcessManager'])}"/>

    <navigation from-action="#{processManagerAction.clearAllFinished}">
      <redirect view-id="/admin/processmanager.xhtml"/>
    </navigation>
  </page>

    <!-- Version Group -->

    <page view-id="/version-group/home.xhtml" >
        <action execute="#{versionGroupAction.loadAllActiveGroupsOrIsMaintainer}" />
        <action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('', messages['jsf.Groups'])}"/>
    </page>

    <page view-id="/version-group/create_version_group.xhtml">
        <restrict>#{s:hasPermission(versionGroupHome.instance, 'insert')}</restrict>
        <action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}"/>
        <action execute="#{breadcrumbs.addLocation('', messages['jsf.CreateNewGroup'])}"/>
        <navigation from-action="#{versionGroupHome.persist}">
            <rule if="#{versionGroupHome.managed}">
                <redirect view-id="/version-group/home.xhtml"/>
            </rule>
        </navigation>
        <navigation from-action="#{versionGroupHome.cancel}">
            <redirect view-id="/version-group/home.xhtml" />
        </navigation>
    </page>
    
    <page view-id="/version-group/version_group.xhtml">
    	<param name="versionGroupSlug" value="#{versionGroupHome.slug}" />

    	<action execute="#{versionGroupHome.validateSuppliedId}" />
    	<action execute="#{versionGroupAction.init(versionGroupSlug)}"/>
    	<action execute="#{versionGroupAction.executePreSearch()}" on-postback="false" />
    	
    	<action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}"/>
        <action execute="#{breadcrumbs.addLocation('', versionGroupHome.slug)}"/>
        
  	</page>
  	
  	<page view-id="/version-group/edit.xhtml" login-required="true">
	    <param name="versionGroupSlug" value="#{versionGroupHome.slug}" />
	    <action execute="#{identity.checkPermission(versionGroupHome.instance, 'update')}" />
	    
	    <action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupHome.slug).param('versionGroupSlug', versionGroupHome.slug)}"/>
        <action execute="#{breadcrumbs.addLocation('', messages['jsf.EditGroup'])}"/>
        
	    <navigation from-action="#{versionGroupHome.update}">
	      <redirect view-id="/version-group/version_group.xhtml">
	        <param name="versionGroupSlug" value="#{versionGroupHome.slug}" />
	      </redirect>
	    </navigation>
	    <navigation from-action="#{versionGroupHome.cancel}">
	      <redirect view-id="/version-group/version_group.xhtml">
	        <param name="versionGroupSlug" value="#{versionGroupHome.slug}" />
	      </redirect>
	    </navigation>
  	</page>

    <page view-id="/version-group/assign_maintainer.xhtml" >
        <param name="versionGroupSlug" value="#{versionGroupMaintainerManageAction.slug}" />
        <action execute="#{versionGroupMaintainerManageAction.init()}" />
        
        <action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupMaintainerManageAction.slug).param('versionGroupSlug', versionGroupMaintainerManageAction.slug)}"/>
        <action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageMaintainers'])}"/>
        
    </page>
    
    <page view-id="/version-group/request_to_join.xhtml">
	    <param name="emailType" value="#{sendEmail.emailType}" />
        <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
        <action execute="#{versionGroupJoinAction.searchMaintainedProjectVersion()}"/>

		<action execute="#{breadcrumbs.clear}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/home.xhtml', messages['jsf.Groups'])}"/>
        <action execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupJoinAction.slug).param('versionGroupSlug', versionGroupJoinAction.slug)}"/>
        <action execute="#{breadcrumbs.addLocation('', messages['jsf.RequestToJoinVersionGroup'])}"/>
        
	    <navigation from-action="#{versionGroupJoinAction.send}">
	      <rule if-outcome="success">
	        <redirect view-id="/version-group/version_group.xhtml">
	          <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
	        </redirect>
	      </rule>
	      <rule if-outcome="failure">
	        <redirect view-id="/version-group/request_to_join.xhtml" />
	      </rule>
	    </navigation>
	    <navigation from-action="#{versionGroupJoinAction.cancel}">
	      <rule>
	        <redirect view-id="/version-group/version_group.xhtml">
	          <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
	        </redirect>
	      </rule>
	    </navigation>
	 </page>

  <!-- Profile -->

  <page view-id="/profile/edit.xhtml">
  	<restrict>#{identity.preAuthenticated}</restrict>
  	<action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.EditProfile'])}"/>
    <navigation from-action="#{profileAction.edit}">
      <rule if-outcome="home">
	      <redirect view-id="/home.xhtml" />
      </rule>
      <rule if-outcome="updated">
	      <redirect view-id="/profile/view.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{profileAction.cancel}">
      <rule if-outcome="home">
	      <redirect view-id="/home.xhtml" />
      </rule>
      <rule if-outcome="view">
	      <redirect view-id="/profile/view.xhtml" />
      </rule>
    </navigation>
  </page>
  
  <page view-id="/profile/view.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.MyProfile'])}"/>
  </page>

  <page view-id="/profile/identities.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.identities.Title'])}"/>
    <action execute="#{credentialsAction.loadUserCredentials}"/>
  </page>

  <page view-id="/profile/add_identity.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}"/>
    <action execute="#{breadcrumbs.addLocation('/profile/identities.xhtml', messages['jsf.identities.Title'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.identities.AddIdentity'])}"/>

    <navigation from-action="#{credentialsAction.cancel}">
      <redirect view-id="/profile/identities.xhtml"/>
    </navigation>
  </page>

  <page view-id="/profile/merge_account.xhtml" login-required="true">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/profile/view.xhtml', messages['jsf.MyProfile'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.profile.MergeAccount'])}"/>
    <action execute="#{accountMergeAction.validateAccounts}"/>

    <navigation from-action="#{accountMergeAction.cancel}">
        <redirect view-id="/profile/view.xhtml"/>
    </navigation>
  </page>

  <!-- Help -->
  <page view-id="/help/view.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Help'])}"/>
  </page>
  
  <page view-id="/help/edit_help_content.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/help/view.xhtml', messages['jsf.Help'])}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.EditHelpPageContent'])}"/>
  </page>
  
  <page view-id="/help/contact_admin.xhtml">
    <restrict>#{identity.loggedIn}</restrict>
    <!-- ideally a literal value should be used for emailType,
         couldn't figure out a way to do this with seam/jsf.
         May want to subclass SendEmailAction and set the email template
         upon construction to achieve this. -->
    <param name="emailType" value="#{sendEmail.emailType}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/help/view.xhtml', messages['jsf.Help'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ContactAdmin'])}"/>
    <navigation from-action="#{sendEmail.cancel}">
      <rule>
        <redirect view-id="/help/view.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/help/view.xhtml" />
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/help/contact_admin.xhtml" />
      </rule>
    </navigation>
  </page>

  
  <!-- Project -->
  <page view-id="/project/home.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Projects'])}"/>
  </page>
  
  <page view-id="/project/project.xhtml">
    <param name="slug" value="#{projectHome.slug}" />
    <param name="slug" value="#{versionDetailsAction.projectSlug}" />
    <action execute="#{projectHome.validateSuppliedId}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('', projectHome.instance.slug)}"/>

    <navigation from-action="#{versionDetailsAction.sourceDocs(_version.slug)}">
      <redirect view-id="/iteration/source_files.xhtml">
        <param name="project" value="#{projectHome.instance.slug}"/>
        <param name="iteration" value="#{_version.slug}"/>
      </redirect>
    </navigation>
     <navigation from-action="#{versionDetailsAction.editVersion(_version.slug)}">
      <redirect view-id="/iteration/edit.xhtml">
      	<param name="projectSlug" value="#{projectHome.instance.slug}"/>
        <param name="slug" value="#{_version.slug}"/>
      </redirect>
    </navigation>
  </page>

  <page view-id="/project/create_project.xhtml">
    <restrict>#{s:hasPermission(projectHome.instance, 'insert')}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.CreateANewProject'])}"/>
    <navigation from-action="#{projectHome.persist}">
      <rule if="#{projectHome.managed}">
        <redirect view-id="/project/project.xhtml">
          <param name="slug" value="#{projectHome.instance.slug}" />
        </redirect>
      </rule>
    </navigation>
    <navigation from-action="#{projectHome.cancel}">
      <redirect view-id="/project/home.xhtml" />
    </navigation>
  </page>

  <page view-id="/project/edit.xhtml" login-required="true">
    <param name="slug" value="#{projectHome.slug}" />
    <param name="slug" value="#{localeListAction.slug}" />
    <param name="slug" value="#{projectValidationOptionsAction.projectSlug}" />

    <!-- we can't use <restrict> on projectHome.instance because it creates
         a brand-new HProject instead of loading the existing one
         (at some stages of the JSF lifecycle)
      -->
    <action execute="#{identity.checkPermission(projectHome.instance, 'update')}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectHome.instance.slug).param('slug', projectHome.slug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.EditProject'])}"/>
    
    <navigation from-action="#{projectHome.update}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.slug}" />
      </redirect>
    </navigation>
    <navigation from-action="#{projectHome.cancel}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.slug}" />
      </redirect>
    </navigation>
  </page>
  
  <!-- Admin only home page code editor. -->
  <page view-id="/project/homepage_edit.xhtml">
    <param name="slug" value="#{projectHome.slug}" />
    <param name="slug" value="#{localeListAction.slug}" />
    
    <!-- we can't use <restrict> on projectHome.instance because it creates
         a brand-new HProject instead of loading the existing one
         (at some stages of the JSF lifecycle)
      -->
    <action execute="#{identity.checkPermission(projectHome.instance, 'update')}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectHome.instance.slug).param('slug', projectHome.slug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.project.EditHomePage.label'])}"/>
    
    <navigation from-action="#{projectHome.update}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.slug}" />
      </redirect>
    </navigation>
    <navigation from-action="#{projectHome.cancel}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectHome.slug}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/project/assign_maintainer.xhtml" >
    <param name="projectSlug" value="#{projectMaintainerManageAction.slug}" />
    <param name="projectSlug" value="#{projectHome.slug}" />
    <action execute="#{projectMaintainerManageAction.loadAllMaintainers()}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectHome.instance.slug).param('slug', projectHome.slug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.ManageMaintainers'])}"/>
    
    <navigation from-action="#{projectMaintainerManageAction.deleteMaintainer(projectMaintainerManageAction.selectedPerson)}">
    	<rule if="#{not s:hasPermission(projectMaintainerManageAction.project, 'update')}">
	    	<redirect view-id="/project/home.xhtml">
	    		<message severity="info">#{messages['jsf.YouAreNoLongerMaintainerForThisProject']}</message>
	    		<param name="slug" value="#{projectMaintainerManageAction.slug}"/>
	    	</redirect>
    	</rule>
    </navigation>
  </page>

  <page view-id="/project/add_iteration.xhtml">
    <param name="projectSlug" value="#{projectIterationHome.projectSlug}" />
    <param name="projectSlug" value="#{versionValidationOptionsAction.projectSlug}" />
    
    <action execute="#{projectIterationHome.validateProjectSlug}" />
    <!-- can't use <restrict> here either --> 
    <action execute="#{identity.checkPermission(projectIterationHome.instance, 'insert')}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml/', projectIterationHome.instance.project.slug).param('slug', projectIterationHome.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.CreateVersion'])}"/>
    
    <navigation from-action="#{projectIterationHome.persist}">
      <rule if="#{projectIterationHome.managed}">
        <redirect view-id="/iteration/view.xhtml">
      	  <param name="projectSlug" value="#{projectIterationHome.projectSlug}"/>
          <param name="iterationSlug" value="#{projectIterationHome.instance.slug}" />
      	</redirect>
      </rule>
    </navigation>
    <navigation from-action="#{projectIterationHome.cancel}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectIterationHome.projectSlug}" />
      </redirect>
    </navigation>
  </page>

  <page view-id="/project/copy_trans_options.xhtml">
    <param name="projectSlug" value="#{projectCopyTransOptionsAction.projectSlug}"/>

	<!-- we can't use <restrict> on projectHome.instance because it creates
         a brand-new HProject instead of loading the existing one
         (at some stages of the JSF lifecycle)
      -->
    <action execute="#{identity.checkPermission(projectCopyTransOptionsAction.project, 'update')}" />
    
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectCopyTransOptionsAction.projectSlug).param('slug', projectCopyTransOptionsAction.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.project.CopyTransOpts.title'])}"/>
    <action execute="#{projectCopyTransOptionsAction.initialize}"/>

    <navigation from-action="#{projectCopyTransOptionsAction.saveOptions}">
      <redirect view-id="/project/project.xhtml">
        <param name="slug" value="#{projectCopyTransOptionsAction.projectSlug}" />
      </redirect>
    </navigation>
  </page>

  <!-- Project Iteration -->
    
  <page view-id="/iteration/view.xhtml" >
    <param name="projectSlug" value="#{viewAllStatusAction.projectSlug}" />
    <param name="iterationSlug" value="#{viewAllStatusAction.iterationSlug}" />
    <action execute="#{viewAllStatusAction.validateIteration}"/>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', viewAllStatusAction.project.slug).param('slug', viewAllStatusAction.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('', viewAllStatusAction.iterationSlug)}"/>
  </page>

  <page view-id="/iteration/source_files.xhtml">
    <param name="project" value="#{projectIterationFilesAction.projectSlug}" />
    <param name="iteration" value="#{projectIterationFilesAction.iterationSlug}" />

    <action execute="#{projectIterationFilesAction.initialize()}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectIterationFilesAction.projectSlug).param('slug', projectIterationFilesAction.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', projectIterationFilesAction.iterationSlug).param('projectSlug', projectIterationFilesAction.projectSlug).param('iterationSlug', projectIterationFilesAction.iterationSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.SourceDocuments'])}"/>

    <navigation from-action="#{projectIterationFilesAction.deleteDocument(doc)}">
      <redirect view-id="/iteration/source_files.xhtml">
        <message severity="INFO">#{messages['jsf.iteration.files.DocumentDeleted']}</message>
        <param name="project" value="#{projectIterationFilesAction.projectSlug}"/>
        <param name="iteration" value="#{projectIterationFilesAction.iterationSlug}"/>
      </redirect>
    </navigation>
  </page>

  <page view-id="/iteration/files.xhtml">
    <param name="project" value="#{projectIterationFilesAction.projectSlug}" />
    <param name="iteration" value="#{projectIterationFilesAction.iterationSlug}" />
    <param name="localeId" value="#{projectIterationFilesAction.localeId}" />

    <param name="project" value="#{projectIterationZipFileAction.projectSlug}" />
    <param name="iteration" value="#{projectIterationZipFileAction.iterationSlug}" />
    <param name="localeId" value="#{projectIterationZipFileAction.localeId}" />

    <action execute="#{projectIterationFilesAction.initialize()}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectIterationFilesAction.projectSlug).param('slug', projectIterationFilesAction.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', projectIterationFilesAction.iterationSlug).param('projectSlug', projectIterationFilesAction.projectSlug).param('iterationSlug', projectIterationFilesAction.iterationSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.Documents'].concat(' (').concat(projectIterationFilesAction.localeId).concat(')'))}"/>
  </page>

  <page view-id="/iteration/edit.xhtml">
    <param name="slug" value="#{projectIterationHome.slug}" />
    <param name="projectSlug" value="#{projectIterationHome.projectSlug}" />
    <param name="slug" value="#{versionValidationOptionsAction.versionSlug}" />
    <param name="projectSlug" value="#{versionValidationOptionsAction.projectSlug}" />
   
    <action execute="#{projectIterationHome.validateSuppliedId}" />
    <!-- can't use <restrict> here either -->
    <action execute="#{identity.checkPermission(projectIterationHome.instance, 'update')}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', projectIterationHome.instance.project.slug).param('slug', projectIterationHome.projectSlug)}"/>
    <action execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', projectIterationHome.slug).param('projectSlug', projectIterationHome.projectSlug).param('iterationSlug', projectIterationHome.slug)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.EditVersion'])}"/>
    
    <navigation from-action="#{projectIterationHome.update}">
      <redirect view-id="/iteration/view.xhtml">
      	<param name="projectSlug" value="#{projectIterationHome.projectSlug}"/>
        <param name="iterationSlug" value="#{projectIterationHome.slug}" />
      </redirect>
    </navigation>

    <navigation from-action="#{projectIterationHome.cancel}">
      <redirect view-id="/iteration/view.xhtml">
      	<param name="projectSlug" value="#{projectIterationHome.projectSlug}"/>
        <param name="iterationSlug" value="#{projectIterationHome.slug}" />
      </redirect>
    </navigation>
  </page>

    <page view-id="/iteration/request_to_join_group.xhtml">
        <param name="emailType" value="#{sendEmail.emailType}" />
        <param name="versionGroupSlug" value="#{versionGroupJoinAction.slug}" />
        <param name="iterationSlug" value="#{versionGroupJoinAction.iterationSlug}"/>
        <param name="projectSlug" value="#{versionGroupJoinAction.projectSlug}"/>

        <action execute="#{versionGroupJoinAction.searchProjectVersion()}"/>
		<action execute="#{breadcrumbs.clear}"/>
		<action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
	    <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', versionGroupJoinAction.projectSlug).param('slug', versionGroupJoinAction.projectSlug)}"/>
	    <action execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', versionGroupJoinAction.iterationSlug).param('projectSlug', versionGroupJoinAction.projectSlug).param('iterationSlug', versionGroupJoinAction.iterationSlug)}"/>
	    <action execute="#{breadcrumbs.addLocation('/version-group/version_group.xhtml', versionGroupJoinAction.group.slug).param('versionGroupSlug', versionGroupJoinAction.group.slug)}"/>
	    <action execute="#{breadcrumbs.addLocation('', messages['jsf.RequestToJoinVersionGroup'])}"/>
    
    
        <navigation from-action="#{versionGroupJoinAction.send}">
            <rule if-outcome="success">
                <redirect view-id="/iteration/view.xhtml">
                    <param name="projectSlug" value="#{versionGroupJoinAction.projectSlug}"/>
                    <param name="iterationSlug" value="#{versionGroupJoinAction.iterationSlug}" />
                </redirect>
            </rule>
            <rule if-outcome="failure">
                <redirect view-id="/iteration/request_to_join_group.xhtml"/>
            </rule>
        </navigation>
        <navigation from-action="#{versionGroupJoinAction.cancel}">
            <rule>
                <redirect view-id="/iteration/view.xhtml">
                    <param name="projectSlug" value="#{versionGroupJoinAction.projectSlug}"/>
                    <param name="iterationSlug" value="#{versionGroupJoinAction.iterationSlug}" />
                </redirect>
            </rule>
        </navigation>
    </page>

  <page view-id="/iteration/copy_trans.xhtml">
      <param name="projectSlug" value="#{copyTransAction.projectSlug}" />
      <param name="iterationSlug" value="#{copyTransAction.iterationSlug}" />
      <!-- can't use <restrict> here either -->
      <action execute="#{identity.checkPermission(copyTransAction.projectIteration, 'copy-trans')}" />
      <action execute="#{copyTransAction.initialize}"/>
      <action execute="#{breadcrumbs.clear}"/>
      <action execute="#{breadcrumbs.addLocation('/project/home.xhtml', messages['jsf.Projects'])}"/>
      <action execute="#{breadcrumbs.addLocation('/project/project.xhtml', copyTransAction.projectSlug).param('slug', copyTransAction.projectSlug)}"/>
      <action execute="#{breadcrumbs.addLocation('/iteration/view.xhtml', copyTransAction.iterationSlug).param('projectSlug', copyTransAction.projectSlug).param('iterationSlug', copyTransAction.iterationSlug)}"/>
      <action execute="#{breadcrumbs.addLocation('', messages['jsf.iteration.CopyTrans'])}"/>

      <navigation from-action="#{copyTransAction.startCopyTrans}">
        <redirect view-id="/iteration/view.xhtml" include-page-params="true">
          <param name="projectSlug" value="#{copyTransAction.projectSlug}" />
          <param name="iterationSlug" value="#{copyTransAction.iterationSlug}" />
        </redirect>
      </navigation>
      <navigation from-action="#{copyTransAction.cancel}">
        <redirect view-id="/iteration/view.xhtml" include-page-params="true">
          <param name="projectSlug" value="#{copyTransAction.projectSlug}" />
          <param name="iterationSlug" value="#{copyTransAction.iterationSlug}" />
        </redirect>
      </navigation>
  </page>
  

  <!-- Language -->
  <page view-id="/language/home.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Languages'])}"/>
  </page>
  
  <page view-id="/language/language.xhtml">
    <param name="id" value="#{languageTeamAction.language}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}"/>
    <action execute="#{breadcrumbs.addLocation('', languageTeamAction.language)}"/>
      
  </page>
  
  <page view-id="/language/contact_coordinator.xhtml">
  	<restrict>#{identity.loggedIn}</restrict>
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="id" value="#{sendEmail.language}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}"/>
    <action execute="#{breadcrumbs.addLocation('/language/language.xhtml', sendEmail.locale.localeId.id).param('id', sendEmail.locale.localeId.id)}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.contactLanguageTeamCoordinatorForLocale'])}"/>
    
    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />        
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/language/contact_coordinator.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{sendEmail.cancel}">
      <rule>
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <page view-id="/language/request_to_join_update_role.xhtml">
    <param name="emailType" value="#{sendEmail.emailType}" />
    <param name="emailType" value="#{languageJoinUpdateRoleAction.emailType}" />
    <param name="id" value="#{languageJoinUpdateRoleAction.language}" />
    <param name="id" value="#{sendEmail.language}" />
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/language/home.xhtml', messages['jsf.Languages'])}"/>
    <action execute="#{breadcrumbs.addLocation('/language/language.xhtml', sendEmail.locale.localeId.id).param('id', sendEmail.locale.localeId.id)}"/>
    <action execute="#{breadcrumbs.addLocation('', languageJoinUpdateRoleAction.title)}"/>

    <navigation from-action="#{sendEmail.send}">
      <rule if-outcome="success">
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />
        </redirect>
      </rule>
      <rule if-outcome="failure">
        <redirect view-id="/language/request_to_join_update_role.xhtml" />
      </rule>
    </navigation>
    <navigation from-action="#{sendEmail.cancel}">
      <rule>
        <redirect view-id="/language/language.xhtml">
          <param name="id" value="#{sendEmail.language}" />
        </redirect>
      </rule>
    </navigation>
  </page>

  <!-- Translation Memory -->
  <page view-id="/tm/home.xhtml">
    <restrict>#{s:hasRole('admin')}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/tm/home.xhtml', messages['jsf.transmemory.Title'])}"/>
  </page>

  <page view-id="/tm/create.xhtml">
    <restrict>#{s:hasRole('admin')}</restrict>
    <action execute="#{breadcrumbs.clear}"/>
    <action execute="#{breadcrumbs.addLocation('/tm/home.xhtml', messages['jsf.transmemory.Title'])}"/>
    <action execute="#{breadcrumbs.addLocation('', messages['jsf.transmemory.title.New'])}"/>
    <navigation from-action="#{translationMemoryAction.persist}">
      <redirect view-id="/tm/home.xhtml"/>
    </navigation>
    <navigation from-action="#{translationMemoryAction.cancel}">
      <redirect view-id="/tm/home.xhtml" />
    </navigation>
  </page>

  <!-- Exceptions -->
  <page view-id="/error.xhtml">
    <action execute="#{breadcrumbs.clear}"/>
  	<action execute="#{breadcrumbs.addLocation('', messages['jsf.Error'])}"/>
  </page>
  
  <exception class="org.zanata.exception.KeyNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.InvalidActivationKey']}</message>
    </redirect>
  </exception>
  
  <exception class="org.zanata.exception.ActivationLinkExpiredException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.ActivationLinkExpired']}</message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.framework.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityNotFoundException"
    log-level="warn">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.RecordNotFound']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.EntityExistsException">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.DuplicatedRecord']}</message>
    </redirect>
  </exception>

  <exception class="javax.persistence.OptimisticLockException">
    <end-conversation />
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.AnotherUserChangedTheSameDataPleaseTryAgain']}</message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.security.AuthorizationException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.YouDoNotHavePermissionToAccessThisResource']}</message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.security.NotLoggedInException"
    log-level="debug">
    <redirect view-id="/account/login_input.xhtml">
      <message severity="warn">#{messages['org.jboss.seam.NotLoggedIn']}</message>
    </redirect>
  </exception>

  <exception class="javax.security.auth.login.LoginException"
    log-level="debug">
    <redirect view-id="/account/login_input.xhtml">
      <message severity="warn">#{messages['org.jboss.seam.NotLoggedIn']}</message>
    </redirect>
  </exception>

  <exception class="javax.faces.application.ViewExpiredException"
    log-level="debug">
    <redirect view-id="/error.xhtml">
      <message severity="warn">#{messages['jsf.YourSessionHasTimedOutPleaseTryAgain']}</message>
    </redirect>
  </exception>

  <exception class="org.jboss.seam.ConcurrentRequestTimeoutException"
    log-level="trace">
    <http-error error-code="503" />
  </exception>

  <exception>
    <redirect view-id="/error.xhtml">
      <message severity="error">#{messages['jsf.UnexpectedError']}</message>
    </redirect>
  </exception>

</pages>
