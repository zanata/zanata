<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
  version="2.0">

  <persistence-unit name="zanataDatasourcePU" transaction-type="JTA">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    <jta-data-source>java:jboss/datasources/zanataDatasource</jta-data-source>
    <mapping-file>META-INF/orm.xml</mapping-file>

    <class>org.zanata.model.Activity</class>
    <class>org.zanata.model.HAccount</class>
    <class>org.zanata.model.HAccountActivationKey</class>
    <class>org.zanata.model.HAccountOption</class>
    <class>org.zanata.model.HAccountResetPasswordKey</class>
    <class>org.zanata.model.HAccountRole</class>
    <class>org.zanata.model.HApplicationConfiguration</class>
    <class>org.zanata.model.HasSimpleComment</class>
    <class>org.zanata.model.HCopyTransOptions</class>
    <class>org.zanata.model.HDocument</class>
    <class>org.zanata.model.HDocumentHistory</class>
    <class>org.zanata.model.HDocumentUpload</class>
    <class>org.zanata.model.HDocumentUploadPart</class>
    <class>org.zanata.model.HGlossaryEntry</class>
    <class>org.zanata.model.HGlossaryTerm</class>
    <class>org.zanata.model.HIterationGroup</class>
    <class>org.zanata.model.HLocale</class>
    <class>org.zanata.model.HLocaleMember</class>
    <class>org.zanata.model.HPerson</class>
    <class>org.zanata.model.HPersonEmailValidationKey</class>
    <class>org.zanata.model.HProject</class>
    <class>org.zanata.model.HProjectIteration</class>
    <class>org.zanata.model.HProjectLocaleMember</class>
    <class>org.zanata.model.HProjectMember</class>
    <class>org.zanata.model.HRawDocument</class>
    <class>org.zanata.model.HRoleAssignmentRule</class>
    <class>org.zanata.model.HSimpleComment</class>
    <class>org.zanata.model.HTextFlowHistory</class>
    <class>org.zanata.model.HTextFlow</class>
    <class>org.zanata.model.HTextFlowTarget</class>
    <class>org.zanata.model.HTextFlowTargetHistory</class>
    <class>org.zanata.model.HTextFlowTargetReviewComment</class>
    <class>org.zanata.model.LanguageRequest</class>
    <class>org.zanata.model.po.HPoHeader</class>
    <class>org.zanata.model.po.HPoTargetHeader</class>
    <class>org.zanata.model.po.HPotEntryData</class>
    <class>org.zanata.model.Request</class>
    <class>org.zanata.model.security.HCredentials</class>
    <class>org.zanata.model.security.HOpenIdCredentials</class>
    <class>org.zanata.model.tm.TransMemoryUnit</class>
    <class>org.zanata.model.tm.TransMemoryUnitVariant</class>
    <class>org.zanata.model.tm.TransMemory</class>
    <class>org.zanata.model.WebHook</class>

    <!-- TODO This may be removed once the class files are packaged in the zanata-model jar as intended
     Otherwise, hibernate will scan the whole war file and dependency jars -->
    <exclude-unlisted-classes>true</exclude-unlisted-classes>

    <properties>
      <!--
          Binds the EntityManagerFactory to JNDI where Seam can look it up. This is only relevant when
          the container automatically loads the persistence unit, as is the case in JBoss AS 5.
      -->
      <property name="jboss.entity.manager.factory.jndi.name"
        value="java:/zanataEntityManagerFactory" />

      <!-- Automatic schema export and drop -->
      <property name="hibernate.hbm2ddl.auto"
        value="${env.hibernate.hbm2ddl.auto}" />

      <!-- TODO this won't work with Hibernate 4.3 or later -->
      <property name="hibernate.connection.provider_class"
        value="org.zanata.database.WrappedDatasourceConnectionProvider" />

      <!--<property name="hibernate.dialect"-->
        <!--value="org.hibernate.dialect.MySQL5InnoDBDialect"/>-->

      <!-- Logging -->
      <property name="hibernate.show_sql" value="${env.hibernate.show_sql}" />
      <property name="hibernate.use_sql_comments" value="true" />
      <property name="hibernate.format_sql"
        value="${env.hibernate.format_sql}" />

      <property name="hibernate.connection.useUnicode" value="true" />
      <property name="hibernate.connection.characterEncoding" value="UTF-8" />

      <!-- Only relevant if Seam is loading the persistence unit (Java SE bootstrap) -->
      <!-- NB: Might have to be removed for Hibernate 4.3 -->
      <property name="hibernate.transaction.manager_lookup_class"
        value="org.hibernate.transaction.JBossTransactionManagerLookup" />

      <!-- for Hibernate 4.3 (but not 4.2):
      <property name="hibernate.transaction.jta.platform" value="JBossAS" />
      -->

      <!-- Search engine -->
      <property name="hibernate.search.default.directory_provider"
        value="org.hibernate.search.store.impl.FSDirectoryProvider" />
      <property name="hibernate.search.default.locking_strategy"
        value="simple" />
      <!-- to use an existing cache manager (Good for external configuration) -->
      <!--<property name="hibernate.search.infinispan.cachemanager_jndiname"
        value="java:jboss/infinispan/container/hibernate-search"/>-->
      <!-- 50 Meg chunk size by default -->
      <!--<property name="hibernate.search.infinispan.chunk_size" value="52428800"/>
      <property name="hibernate.search.infinispan.indexwriter.ram_buffer_size"
        value="30"/>
      <property
        name="hibernate.search.infinispan.indexwriter.merge_max_optimize_size"
        value="21"/>
      <property
        name="hibernate.search.infinispan.indexwriter.merge_max_size"
        value="21"/>-->
      <property name="hibernate.search.lucene_version" value="LUCENE_36" />
      <property name="hibernate.search.worker.batch_size" value="50" />

      <!-- Run the Hibernate bytecode instrumentation at deployment time, for lazy loading of @ToOne and byte[] properties -->
      <!-- TODO: That doesn't work for me, using the enhancer in build.xml manually -->
      <property name="hibernate.ejb.use_class_enhancer" value="true" />
      <property name="hibernate.max_fetch_depth" value="1" />
      <property name="hibernate.jdbc.batch_size" value="100" />
      <property name="hibernate.order_inserts" value="true" />

      <!-- Enable Hibernate statistics, needs SessionFactory in JNDI for JMX monitoring
      <property name="hibernate.generate_statistics" value="true"/>
      <property name="hibernate.session_factory_name" value="SessionFactories/zanataSF"/>
      -->

      <!-- NB: for Hibernate 4 / AS 7, we may need to use org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory.
           See http://stackoverflow.com/a/8701914
      -->
      <property name="hibernate.cache.region.factory_class"
        value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory" />
      <property name="hibernate.cache.region_prefix" value="" />

      <!-- Default EHcache config location -->
      <!--<property name="net.sf.ehcache.configurationResourceName" value="/ehcache.xml"/>-->

      <property name="hibernate.cache.use_second_level_cache" value="true" />
      <!--       http://stackoverflow.com/questions/9060403/hibernate-query-cache-issue -->
      <property name="hibernate.cache.use_query_cache" value="true" />

      <!-- https://docs.jboss.org/author/display/AS71/JPA+Reference+Guide#JPAReferenceGuide-Persistenceunitproperties -->
      <property name="jboss.as.jpa.managed" value="true" />
    </properties>
  </persistence-unit>

</persistence>
